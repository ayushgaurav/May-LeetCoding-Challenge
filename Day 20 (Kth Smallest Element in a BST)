// https://leetcode.com/problems/kth-smallest-element-in-a-bst/



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int k1;
    int p;
    int sm(TreeNode* root)
    {
        if(root==NULL)
            return 0;
        
        
        sm(root->left);
        k1--;
        if(k1==0)
        {
            p=root->val;
            return p;
        }
        sm(root->right);
       
        return p;
    }
    
    int kthSmallest(TreeNode* root, int k) {
        
        k1=k;
        return(sm(root));    
    }
};
