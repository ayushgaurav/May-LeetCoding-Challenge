// https://leetcode.com/problems/cousins-in-binary-tree/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        bool sib=false,cousin=false;
        queue<TreeNode*> q1,q2;
        q1.push(root);
        while(q1.size()&&!cousin)
        {
            while(q1.size())
            {
                auto a=q1.front();
                q1.pop();
                
                if(a==nullptr)
                {
                    sib=false;
                    
                }
                else
                {
                    if(a->val==x||a->val==y)
                    {
                        if(cousin==false)
                        {
                            sib=true;
                            cousin=true;
                        }
                        else
                        {
                            return !sib;
                        }
                    }
                    q2.push(a->left);q2.push(a->right);q2.push(nullptr);
                    
                }
            }
            swap(q1,q2);
        }
        return false;
        
    }
};
